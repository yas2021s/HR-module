<?php
/**
 * 
 * View -- of Hr/PayrollController/editearningAction
 * 
 */
?>
<?php 
    foreach($this->paystructure as $paystructure):
        extract($paystructure);        
    endforeach;
?>
<form id="#form" method="post" action="<?php echo $this->url('payroll', array('action' => 'edit', 'id' => $id)); ?>"  enctype="multipart/form-data" >                  
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
        <h4 class="modal-title"> <i class="fa fa-pencil-square-o"></i> 
			Edit Earning/Deduction
		</h4>
    </div>  <!-- /modal-header -->    
    <div class="modal-body">       
		<div class="panel panel-default">                       
			<div class="panel-body"> 			
				<div class="form-group">
					<label for="pay_head" class="control-label">Pay Head</label>
	       			<select id="pay_head" class="form-control" placeholder="pay head" name="pay_head" required>
	       				<option value=""></option>
						<?php foreach ($this->payheadObj->getnotSelected(array('employee'=>$employee),'hr_pay_structure', $pay_head_id) as $pay_heads):
							$selected = ($pay_head_id==$pay_heads['id'])?"selected":"";?>
							<option value="<?php echo $pay_heads['id']; ?>" data-type="<?php echo $pay_heads['type'];?>" <?php echo $selected;?>>
								<?php echo $pay_heads['pay_head']; ?>
							</option>
						<?php endforeach;?>
					</select>
				</div>
				<div class="form-group" id="percent_div">
				    <?php 
					if($type == 2): 
						$againstName = $this->payheadObj->getColumn($against,'pay_head');
						$baseamount = $this->paystructureObj->getColumn(array('employee' => $employee, 'pay_head'=>$against),'amount');
						$readonly = 'readonly';
					?>
						<label for="percent" class="control-label">Percent ( against <?php echo $againstName; ?>: <b><?php echo $baseamount;?></b> )</label>
						<input type="text" class="form-control" name="percent" id="percent" value="<?php echo $percent; ?>"> 
						<input type="hidden" class="form-control" name="baseamount" id="baseamount" value="<?php echo $baseamount;?>">
						
				    <?php 
					elseif($type == 3): 
						$againstName = ($against > 1)? $this->payheadObj->getColumn($against,'pay_head'):'Gross Pay';
						$gross = ($against > 1)? $this->paystructureObj->getColumn(array('employee' => $employee, 'pay_head'=>$against),'amount'):$this->temppayrollObj->getColumn(array('employee' => $employee),'gross');
						$readonly = 'readonly';
					?>
						<label for="percent" class="control-label"> <?php echo $againstName; ?>: </label>
						<input type="text" class="form-control" name="baseamount" id="baseamount" value="<?php echo $gross; ?>" readonly> 
						
					<?php elseif($type == 4): 
						$readonly = 'readonly';
					?>							
						<label for="group" class="control-label"> Group </label>
						<select id='group' name='group'class="form-control" data-placeholder="Select">
							<option value=''></option>
							<?php foreach($this->paygroupObj->get(array('pg.pay_head'=>$pay_head_id)) as $paygroup):
								$selected = ($paygroup['value']==$amount)?'selected':'';
							?>
								<option value='<?php echo $paygroup['value'];?>' <?php echo $selected; ?>><?php echo $paygroup['group'];?></option>
							<?php endforeach;?>
						</select>
				    <?php 
				        endif;
				    ?>
				</div>
				<div class="form-group">
					<label for="amount" class="control-label">Amount(<?php echo $this->currency_code();?>)</label>
					<input type="text" class="form-control" name="amount" id="amount" value="<?php echo $amount;?>" <?php echo $readonly; ?> required/> 
				</div>			
				<div class="form-group">
					<label for="ref_no" class="control-label">Reference No. (Acc no./TPN no.)</label>
					<input type="text" class="form-control" name="ref_no" id="ref_no" value="<?php echo $ref_no;?>" /> 
				</div>
				<div class="form-group">
					<label for="remarks" class="control-label">Remarks</label>
					<textarea class="form-control" name="remarks" id="remarks"><?php echo $remarks;?></textarea> 
				</div>
				<div class="form-group">
					<label>
						 <?php $checked = ($dlwp == '1')?"checked":""; ?>
						<input class="ace" type="checkbox"  <?php echo $checked;?> name="dlwp" id="dlwp" value="1" style="min-width: 90px;"></input>
						<span class="lbl"> Depends on LWP</span>
					</label>
			    </div>
			</div>
		</div>
	</div> <!-- /modal-body -->    
    <div class="modal-footer">
		<button type="submit" class="btn btn-success"><i class="fa fa-check"></i> Save </button>
		<button type="button" class="btn btn-warning" data-dismiss="modal"><i class="fa fa-times"></i> Cancel </button> 
    </div>
</form>
<script>
$('document').ready(function(){
	$("#pay_head").change(function() { 	
		var type =$("#pay_head option:selected").data('type');
		var pay_head = $(this).val();
		if(type==2){	
			$.post("<?php echo $this->url('payroll', array('action' => 'getslabtype'));?>", {employee:<?php echo $employee;?>,pay_head:pay_head}, function(data){
				$('#percent_div').html(data);
				$('#amount').attr('readonly', 'readonly');
				var amt = 0;
				if($('#percent').length > 0){
					$('#percent').bind('change', function(){
						var baseamount = 0;
						baseamount = $('#baseamount').val();
						amt = (parseFloat(baseamount) / 100) * parseFloat($('#percent').val());
						if($('#roundup').val() == 1){
							$('#amount').val(amt.toFixed());
						}else{
							$('#amount').val(amt.toFixed(2));
						}						  
					});
					var baseamount = 0;
					baseamount = $('#baseamount').val();
					amt = (parseFloat(baseamount) / 100) * parseFloat($('#percent').val());
					if($('#roundup').val() == 1){
						$('#amount').val(amt.toFixed());
					}else{
						$('#amount').val(amt.toFixed(2));
					}	
				}
			});
		}else if(type==3){ //slab
			$.post("<?php echo $this->url('payroll', array('action' => 'getslabtype'));?>", {employee:<?php echo $employee;?>,pay_head:pay_head}, function(data){
				$('#percent_div').html(data);
				var amt =0;
				$('#amount').attr('readonly','readonly');
				if($('#rate').length > 0){
					var rate = $('#rate').val(); 
					if(rate != 0){	
						if($('#basic').val() > 150200){
							amt = (parseFloat(parseFloat(($('#basic').val() - 83333) / 100) * rate) + parseFloat($('#base').val()));
						}else{	            
							amt = (parseFloat(parseInt(($('#basic').val() - $('#min').val()) / 100) * rate) + parseFloat($('#base').val()));
						}
					}
					else{
						amt = $('#value').val(); 
					}	
					if($('#roundup').val() == 1){
						$('#amount').val(amt.toFixed());
					}else{
						$('#amount').val(amt.toFixed(2));
					}	
				}
			});
		}else if(type==4){	
			$.post("<?php echo $this->url('payroll', array('action' => 'getslabtype'));?>", {employee:<?php echo $employee;?>,pay_head:pay_head}, function(data){
				$('#percent_div').html(data);
				$('#amount').attr('readonly', 'readonly');
				$('#amount').val('');
				if($('#group').length > 0){
					$('#group').bind('change', function(){
						$amt = $(this).val();
						if($('#roundup').val() == 1){
							$('#amount').val(amt.toFixed());
						}else{
							$('#amount').val(amt.toFixed(2));
						}						  
					});
				}
				$('form select').chosen({allow_single_deselect:true});
			});
		}else{
			$('#amount').val('');
			$('#percent_div').html('');
			$('#amount').removeAttr('readonly');
		}
	});					    	
	if($('#percent').length > 0){
		$('#percent').bind('change', function(){
			var baseamount = 0;
			baseamount = $('#baseamount').val();
			amt = (parseFloat(baseamount) / 100) * parseFloat($('#percent').val());
			if($('#roundup').val() == 1){
				$('#amount').val(amt.toFixed());
			}else{
				$('#amount').val(amt.toFixed(2));
			}						  
		});
	}			    
	if($('#group').length > 0){
		$('#group').bind('change', function(){
			$amt = $(this).val();
			if($('#roundup').val() == 1){
				$('#amount').val(amt.toFixed());
			}else{
				$('#amount').val(amt.toFixed(2));
			}						  
		});
	}	    			    
	const fv = FormValidation.formValidation(document.getElementById('#form'), {
		fields: {
			pay_head:{
				validators: {
					notEmpty: {
						message: 'Please select pay head.'
					}
				}
			},
			amount:{
				validators: {
					notEmpty: {
						message: 'Please provide amount.'
					},
					regexp: {
						regexp: /^\d*\.?\d*$/,
						message: 'Please enter valid amount'
					}
				}
			},
		},
		plugins: {
			trigger: new FormValidation.plugins.Trigger(),
			bootstrap3: new FormValidation.plugins.Bootstrap3(),
			submitButton: new FormValidation.plugins.SubmitButton(),
			defaultSubmit: new FormValidation.plugins.DefaultSubmit(),
		},
	}).on('core.element.validated', function (e) {
		if (e.valid) {
			$('div#'+ e.field.replace('[]','') +'_chosen').removeClass('is-invalid');
			$('div#'+ e.field.replace('[]','') +'_chosen').addClass('is-valid');
		} else {
			$('div#'+ e.field.replace('[]','') +'_chosen').removeClass('is-valid');
			$('div#'+ e.field.replace('[]','') +'_chosen').addClass('is-invalid');
		}
	});
});
</script>
